{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","_ref$label","label","_ref$placeholder","placeholder","concat","_ref$required","required","_ref$onChange","onChange","_useState","useState","Math","random","toFixed","slice","id","_slicedToArray","_useState3","_useState4","touched","setTouched","hasError","htmlFor","type","classNames","event","target","onBlur","NewMovie","onAdd","_useState2","count","setCount","setTitle","_useState5","_useState6","setDescription","_useState7","_useState8","setImgUrl","_useState9","_useState10","setImdbUrl","_useState11","_useState12","setImdbId","isValid","onSubmit","preventDefault","prevCount","disabled","App","moviesFromServer","setMovies","prevMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69f583d2.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => {\n            if (!touched) {\n              setTouched(true);\n            }\n          }}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\n\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count, setCount] = useState(0);\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const isValid = title && imgUrl && imdbUrl && imdbId;\n\n  function resetForm() {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n\n    setCount(prevCount => prevCount + 1);\n  }\n\n  function handleAdd(event: React.FormEvent) {\n    event.preventDefault();\n\n    if (!isValid) {\n      return;\n    }\n\n    onAdd({\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      description,\n    });\n\n    resetForm();\n  }\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleAdd}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!isValid}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const onMovieAdd = (movie: Movie) => {\n    setMovies(prevMovies => [...prevMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onMovieAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}